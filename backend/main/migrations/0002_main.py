# -*- coding: windows-1251 -*
# Generated by Django 4.2.6 on 2023-10-14 14:32

from django.db import migrations
import json


def load_data_from_atms_json(apps, schema_editor):
    ATMS = apps.get_model('main', 'atms')
    # Путь к JSON файлу с данными
    json_file_path = './data/atms.json'

    print('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')

    # Открываем JSON файл и загружаем данные
    with open(json_file_path, 'r') as json_file:
        data = json.load(json_file)
    # Итерируемся по данным и создаем объекты модели atms
    for item in data['atms']:
        atms1 = ATMS(
            address=item['address'],
            latitude=item['latitude'],
            longitude=item['longitude'],
            allDay=item['allDay'],
            wheelchair_serviceCapability=item['services']['wheelchair']['serviceCapability'],
            wheelchair_serviceActivity=item['services']['wheelchair']['serviceActivity'],
            blind_serviceCapability=item['services']['blind']['serviceCapability'],
            blind_serviceActivity=item['services']['blind']['serviceActivity'],
            nfcForBankCards_serviceCapability=item['services']['nfcForBankCards']['serviceCapability'],
            nfcForBankCards_serviceActivity=item['services']['nfcForBankCards']['serviceActivity'],
            qrRead_serviceCapability=item['services']['qrRead']['serviceCapability'],
            qrRead_serviceActivity=item['services']['qrRead']['serviceActivity'],
            supportsUsd_serviceCapability=item['services']['supportsUsd']['serviceCapability'],
            supportsUsd_serviceActivity=item['services']['supportsUsd']['serviceActivity'],
            supportsChargeRub_serviceCapability=item['services']['supportsChargeRub']['serviceCapability'],
            supportsChargeRub_serviceActivity=item['services']['supportsChargeRub']['serviceActivity'],
            supportsEur_serviceCapability=item['services']['supportsEur']['serviceCapability'],
            supportsEur_serviceActivity=item['services']['supportsEur']['serviceActivity'],
            supportsRub_serviceCapability=item['services']['supportsRub']['serviceCapability'],
            supportsRub_serviceActivity=item['services']['supportsRub']['serviceActivity']
        )
        atms1.save()


def load_data_from_offices_json(apps, schema_editor):
    Offices = apps.get_model('main', 'Offices')  # Замените 'your_app_label' на актуальное имя вашего приложения

    # Путь к JSON файлу с данными
    json_file_path = './data/offices.json'  # Замените путь на актуальный путь к вашему JSON-файлу

    # Открываем JSON файл и загружаем данные
    with open(json_file_path, 'r') as json_file:
        data = json.load(json_file)
    print('bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb')
    # Итерируемся по данным и создаем объекты модели offices
    for item in data:
        office = Offices(
            salePointName=item['salePointName'],
            address=item['address'],
            status=item['status'],
            officeType=item['officeType'],
            salePointFormat=item['salePointFormat'],
            suoAvailability=item['suoAvailability'],
            hasRamp=item['hasRamp'],
            latitude=item['latitude'],
            longitude=item['longitude'],
            metroStation=item['metroStation'],
            distance=item['distance'],
            kep=item['kep'],
            myBranch=item['myBranch'],

            # Для юр лиц
            ul_mon=item['openHours'][0],
            ul_tue = item['openHours'][1],
            ul_wen = item['openHours'][2],
            ul_thu = item['openHours'][3],
            ul_fri = item['openHours'][4],
            ul_sat = item['openHours'][5],
            ul_san = item['openHours'][6],

            # Для физ лиц
            fl_mon=item['openHoursIndividual'][0],
            fl_tue=item['openHoursIndividual'][1],
            fl_wen=item['openHoursIndividual'][2],
            fl_thu=item['openHoursIndividual'][3],
            fl_fri=item['openHoursIndividual'][4],
            fl_sat=item['openHoursIndividual'][5],
            fl_san=item['openHoursIndividual'][6],
        )
        office.save()


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_data_from_atms_json),
        migrations.RunPython(load_data_from_offices_json),
    ]
